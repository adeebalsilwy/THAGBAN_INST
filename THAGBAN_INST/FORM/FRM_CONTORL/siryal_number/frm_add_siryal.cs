using DevExpress.XtraEditors;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Entity.Migrations;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using THAGBAN_INST.DATA;

namespace THAGBAN_INST.FORM.FRM_CONTORL.siryal_number
{
    public partial class frm_add_siryal : DevExpress.XtraEditors.XtraForm
    {
        db_max_instEntities con = new db_max_instEntities();
        int spic_id = 0;
        
        public frm_add_siryal()
        {
            InitializeComponent();
            get_data();
            get_sp();
        }

        private void txt_mark_value_TextChanged(object sender, EventArgs e)
        {

        }
        public void get_data()
        {

            // This line of code is generated by Data Source Configuration Wizard
            // Instantiate a new DBContext
            db_max_instEntities dbContext = new db_max_instEntities();
            // Call the LoadAsync method to asynchronously get the data for the given DbSet from the database.

            // Bind data to control when loading complete
            //com_stud.DataSource = dbContext.TBL_STUDENTS.Where(W=>W.STUD_STATE==true).ToList();
            //com_stud.DisplayMember = "STUD_NAME";
            //com_stud.ValueMember = "STUD_ID";
            com_years_mark.DataSource = dbContext.TBL_YEARS_MARK.OrderByDescending(w=>w.YEARS_DATA).ToList();
            com_years_mark.DisplayMember = "YEARS_DATA";
            com_years_mark.ValueMember = "ID";
            com_spiacl.DataSource = con.TBL_SPECIAL.ToList();
            com_spiacl.DisplayMember = "SPEC_NAME";
            com_spiacl.ValueMember = "SPEC_ID";

        }
        void get_sp()
        {
            // This line of code is generated by Data Source Configuration Wizard
            // Instantiate a new DBContext
            THAGBAN_INST.DATA.db_max_instEntities dbContext = new THAGBAN_INST.DATA.db_max_instEntities();
            // Call the LoadAsync method to asynchronously get the data for the given DbSet from the database.



            if (ch_all.Checked)
            {
                var tenp1 = (from stud in dbContext.TBL_STUDENTS
                             join sp in dbContext.TBL_STUD_SPEC
                             on stud.STUD_ID equals sp.STUD_ID
                             join spec in dbContext.TBL_SPECIAL
                             on sp.SPEC_ID equals spec.SPEC_ID
                             select new
                             {
                                 stud.STUD_ID,
                                 stud.STUD_NAME,
                                 stud.STUD_GENDER,
                                 stud.STUD_ADDRESS,
                                 stud.STUD_LNAME,
                                 stud.STUD_DATE,
                                 stud.STUD_PHONE,
                                 stud.STUD_STATE,
                                 // spec.SPEC_ID,
                                 spec.SPEC_NAME,
                                 sp.STUD_SPEC_YEAR
                             }).ToList();

                // Bind data to control when loading complete

                lbl_count.Text = tenp1.Where(w => w.STUD_STATE == true).Count().ToString();
            }
            else
            {
                spic_id = Convert.ToInt32(com_spiacl.SelectedValue.ToString());
                var tenp1 = (from stud in dbContext.TBL_STUDENTS
                             join sp in dbContext.TBL_STUD_SPEC
                             on stud.STUD_ID equals sp.STUD_ID
                             join spec in dbContext.TBL_SPECIAL.Where(w=>w.SPEC_ID==spic_id)
                             on sp.SPEC_ID equals spec.SPEC_ID
                             select new
                             {
                                 stud.STUD_ID,
                                 stud.STUD_NAME,
                                 stud.STUD_GENDER,
                                 stud.STUD_ADDRESS,
                                 stud.STUD_LNAME,
                                 stud.STUD_DATE,
                                 stud.STUD_PHONE,
                                 stud.STUD_STATE,
                                 // spec.SPEC_ID,
                                 spec.SPEC_NAME,
                                 sp.STUD_SPEC_YEAR
                             }).ToList();

                // Bind data to control when loading complete

                lbl_count.Text = tenp1.Where(w => w.STUD_STATE == true).Count().ToString();
            }


        }

        private void ch_all_CheckedChanged(object sender, EventArgs e)
        {
            cheack_state();
        }
        void cheack_state()
        {
            if (ch_all.Checked)
            {
                com_spiacl.Enabled = false;
                spic_id = 0;
               
            }
            else
            {
                com_spiacl.Enabled = true;
            }
            get_sp();
        }

        private void com_spiacl_SelectionChangeCommitted(object sender, EventArgs e)
        {
            get_sp();
        }

        private void frm_add_siryal_Activated(object sender, EventArgs e)
        {

        }
        void genrate_siryal()
        {
            Random rand = new Random(1);
            List<int> uniqNUmber = new List<int>();
            int min = Convert.ToInt32(textEdit1.Text);
           
            while (uniqNUmber.Count < Convert.ToInt32(lbl_count.Text))
            {
               
               
                uniqNUmber.Add(min);
                min++;
                
            }

           
            int count_filer = 0;
            int count_suucsef = 0;
            if (ch_all.Checked)
            {
                var list_stud = con.TBL_STUD_SPEC.Where(w => w.TBL_STUDENTS.STUD_STATE == true).ToList();
                for (int i = 0; i < list_stud.Count; i++)
                {
                    try
                    {
                        TBL_SIRYAL_STUDENTS tbl = new TBL_SIRYAL_STUDENTS();
                        tbl.SPIC_ID = list_stud[i].SPEC_ID;
                        tbl.STUD_ID = list_stud[i].STUD_ID;
                        tbl.SIRYAL_YEARS = Convert.ToInt32(com_years_mark.SelectedValue.ToString());
                        tbl.SIRYAL_NUMBER = uniqNUmber[i];
                        con.TBL_SIRYAL_STUDENTS.AddOrUpdate(tbl);
                        con.SaveChanges();
                        count_suucsef++;
                    }
                    catch (Exception ex)
                    {
                        count_filer++;
                    }


                }
            }
            else
            {
                spic_id = Convert.ToInt32(com_spiacl.SelectedValue.ToString());
                var list_stud = con.TBL_STUD_SPEC.Where(w => w.SPEC_ID == spic_id && w.TBL_STUDENTS.STUD_STATE == true).ToList();
                for (int i = 0; i < list_stud.Count; i++)
                {
                    try
                    {
                        TBL_SIRYAL_STUDENTS tbl = new TBL_SIRYAL_STUDENTS();
                        tbl.SPIC_ID = list_stud[i].SPEC_ID;
                        tbl.STUD_ID = list_stud[i].STUD_ID;
                        tbl.SIRYAL_YEARS = Convert.ToInt32(com_years_mark.SelectedValue.ToString());
                        tbl.SIRYAL_NUMBER = uniqNUmber[i];
                        con.TBL_SIRYAL_STUDENTS.AddOrUpdate(tbl);
                        con.SaveChanges();
                        count_suucsef++;
                    }
                    catch (Exception ex)
                    {
                        count_filer++;
                    }

                }
            }
            MessageBox.Show("succfula " + count_suucsef + ",filaer" + count_filer + "");
            }

        private void btn_save_Click(object sender, EventArgs e)
        {
            genrate_siryal();
        }
    }
}