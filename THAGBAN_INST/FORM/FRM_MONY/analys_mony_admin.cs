using DevExpress.XtraEditors;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.Data.Entity;
using THAGBAN_INST.DATA;
using DevExpress.XtraCharts.Native;
using static System.Windows.Forms.VisualStyles.VisualStyleElement.Button;
using System.Globalization;

namespace THAGBAN_INST.FORM.FRM_MONY
{
    public partial class analys_mony_admin : DevExpress.XtraEditors.XtraUserControl
    {
        private int year_id;
        private int month_id;
        db_max_instEntities con = new db_max_instEntities();
        private int tech_lect_id;
        string courne1 = THAGBAN_INST.Properties.Settings.Default.courncy;
        public analys_mony_admin()
        {
            InitializeComponent();
            // This line of code is generated by Data Source Configuration Wizard

            // load_send_rest();
            cheack_change();
            Get_piad();
            get_seles();
            get_data();








         
        }

        void get_data()
        {

            // This line of code is generated by Data Source Configuration Wizard
            // Instantiate a new DBContext
            THAGBAN_INST.DATA.db_max_instEntities dbContext = new THAGBAN_INST.DATA.db_max_instEntities();
            // Call the LoadAsync method to asynchronously get the data for the given DbSet from the database.
            dbContext.TBL_OPRATION.LoadAsync().ContinueWith(loadTask =>
            {
                // Bind data to control when loading complete
                chartControl1.DataSource = dbContext.TBL_OPRATION.Local.ToBindingList();
            }, System.Threading.Tasks.TaskScheduler.FromCurrentSynchronizationContext());
        }


        void Get_piad()
        {

            try
            {


                int piad_count = 0;
                long total_rest = 0;
                if (ch_years.Checked == true && ch_month.Checked == false)
                {
                    lb_benfit1.Text = "0";
                    lb_sell1.Text = "0";
                    year_id = Convert.ToInt32(com_years.Text.ToString());
                        lb_benfit1.Text = con.TBL_OPRATION.Where(w => w.OPRATION_TYPE.Equals("سحب") && w.PORATION_DATE.Value.Year == year_id).Sum(w => w.PORATION_AMOUNT).ToString();
                        lb_sell1.Text = con.TBL_OPRATION.Where(w => w.OPRATION_TYPE.Equals("ايداع") && w.PORATION_DATE.Value.Year == year_id).Sum(w => w.PORATION_AMOUNT).ToString();
                        chartControl1.DataSource = con.TBL_OPRATION.Where(w => w.PORATION_DATE.Value.Year == year_id).ToList();
                    



                }
                else if (ch_years.Checked == true && ch_month.Checked == true)
                {
                    lb_benfit1.Text = "0";
                    lb_sell1.Text = "0";
                    lb_benfit1.Text = con.TBL_OPRATION.Where(w => w.OPRATION_TYPE.Equals("سحب") && w.PORATION_DATE.Value.Year == year_id && w.PORATION_DATE.Value.Month==month_id).Sum(w => w.PORATION_AMOUNT).ToString();
                    lb_sell1.Text = con.TBL_OPRATION.Where(w => w.OPRATION_TYPE.Equals("ايداع") && w.PORATION_DATE.Value.Year == year_id && w.PORATION_DATE.Value.Month == month_id).Sum(w => w.PORATION_AMOUNT).ToString();
                    chartControl1.DataSource = con.TBL_OPRATION.Where(w => w.PORATION_DATE.Value.Year == year_id && w.PORATION_DATE.Value.Month == month_id).ToList();
                }

                //else if (ch_years.Checked == false && ch_month.Checked == true)
                //{
                //    lb_benfit1.Text = "0";
                //    lb_sell1.Text = "0";
                //    lb_benfit1.Text = con.TBL_OPRATION.Where(w => w.OPRATION_TYPE.Equals("سحب") &&  w.PORATION_DATE.Value.Month == month_id).Sum(w => w.PORATION_AMOUNT).ToString();
                //    lb_sell1.Text = con.TBL_OPRATION.Where(w => w.OPRATION_TYPE.Equals("ايداع") &&  w.PORATION_DATE.Value.Month == month_id).Sum(w => w.PORATION_AMOUNT).ToString();
                //    chartControl1.DataSource = con.TBL_OPRATION.Where(w =>  w.PORATION_DATE.Value.Month == month_id).ToList();

                //}

              

            }
            catch (Exception ex) { }

        }

        void get_seles()
        {
            try
            {
                lb_benfit1.Text = con.TBL_OPRATION.Where(w => w.OPRATION_TYPE.Equals("سحب")).Sum(w => w.PORATION_AMOUNT).ToString();
                lb_sell1.Text = con.TBL_OPRATION.Where(w => w.OPRATION_TYPE.Equals("ايداع")).Sum(w => w.PORATION_AMOUNT).ToString();
                int inst_id = THAGBAN_INST.Properties.Settings.Default.inst_id;
                lb_buy1.Text = con.TBL_INST.Find(inst_id).INST_TOTAL.ToString();
                lb_benfit2.Text = " " + courne1;
                lb_buy2.Text = " " + courne1;
                lb_sell2.Text = " " + courne1;
            }catch (Exception ex)
            {

            }

        }
        public void get_years()
        {
            var tbl = con.TBL_YEARS_MARK.Where(w => w.STATE == true).ToList();
               


            if (tbl != null)
            {
                com_years.DataSource = tbl.ToList();
                com_years.DisplayMember = "YEARS_DATA";
                com_years.ValueMember = "ID";
                get_month();


            }
            else
            {
                com_years.DataSource = null;
                com_years.Items.Clear();
                com_years.Text = "";
            }
        }
        public void get_month()
        {
            try
            {

                string[] monthNames = DateTimeFormatInfo.CurrentInfo.MonthNames;

                // Loop through the month names and add them to the ComboBox
                foreach (string monthName in monthNames)
                {
                    // Skip empty month names
                    if (!string.IsNullOrEmpty(monthName))
                    {
                        com_month.Items.Add(monthName);
                    }
                }
            
            }
            catch (Exception ex) { }


        }
        void cheack_change()
        {

            if (ch_years.Checked)
            {
                com_years.Enabled = true;
            }
            else
            {
                com_years.Enabled = false;
            }
            if (ch_month.Checked)
            {
                com_month.Enabled = true;
                get_month();

            }
            else
            {
                //groupBox1.Enabled = false;
                //groupBox1.Visible = false;
                com_month.Enabled = false;
            }
           
            Get_piad();
        }

        private void label4_Click(object sender, EventArgs e)
        {

        }

        private void flowLayoutPanel1_Paint(object sender, PaintEventArgs e)
        {

        }

        private void btn_add_Click(object sender, EventArgs e)
        {
           // load_send_rest();
           
            get_seles();
            Get_piad();
            get_data();

        }

        private void com_lect_SelectedIndexChanged(object sender, EventArgs e)
        {
            try
            {
                if (com_years.Text != "")
                {
                    year_id = Convert.ToInt32(com_years.Text);
                    get_month();
                    Get_piad();
                }
               
            }
            catch(Exception ex) { }
           
        }

        private void com_group_SelectedIndexChanged(object sender, EventArgs e)
        {
            try
            {
                month_id = Convert.ToInt32(com_month.SelectedIndex)+1;
                Get_piad();
            }
            catch(Exception ex) { }
            // get_group();
            
        }

        private void ch_lect_CheckedChanged(object sender, EventArgs e)
        {
            cheack_change();
            get_years();
            Get_piad();
        }

        private void ch_grou_CheckedChanged(object sender, EventArgs e)
        {
            cheack_change();
            get_month();
            Get_piad();
          
        }
    }
}
